# 📌 FlowBoard 프로젝트 기획서

## 📛 프로젝트명  
**FlowBoard**  
> 일정과 이슈를 통합 관리하는 개발자 협업 도구

---

## 🎯 프로젝트 목표  

- **캘린더 기반 일정 관리**와 **깃 이슈 기반 트래킹 보드**를 통합한 협업 툴을 개발  
- 단순 할 일 관리를 넘어, *프로젝트 흐름을 설계하고 병목을 줄이는 구조* 구현  
- 혼자서 기획 → 설계 → 개발 → 배포 전 과정 수행

---

## 🧩 주요 기능 구성  

### 📅 1. 캘린더 기반 타임라인 설계
- `react-big-calendar` 사용
- 일정 추가/수정/삭제
- 병렬 가능 작업 / 의존 작업 구분
- 일정 클릭 시 이슈 상세 정보 표시

### 🗂 2. 이슈 관리 보드 (Kanban)
- To Do / In Progress / Done 상태 관리
- 이슈 항목 생성 시 포함 항목:
  - 제목 / 설명 / 우선순위 / 예상 시간 / 완료 기준 / 담당자
- 우선순위별 라벨링 및 필터
- 드래그 앤 드롭 이동

### 🔁 3. 연동 기능
- 일정 ↔ 이슈 양방향 연결
- 일정에서 이슈 상세 보기
- 이슈 완료 시 캘린더 일정 자동 반영
- 일정 간 충돌 시 알림 표시

---

## 👥 타겟 사용자

- 사이드 프로젝트 중인 개발자 팀  
- 협업 경험이 부족한 입문자  
- 일정 + 작업 흐름을 시각적으로 정리하고 싶은 사람

---

## 🔧 기술 스택

| 영역 | 기술 |
|------|------|
| 프론트엔드 | React, TailwindCSS, Zustand or React Query |
| UI 라이브러리 | react-big-calendar, dnd-kit |
| 백엔드 | Node.js (Express), MongoDB (Mongoose) or Firebase |
| 인증/로그인 (선택) | Firebase Auth or JWT |
| 배포 | Vercel (프론트), Railway or Render (백엔드) |
| 상태 관리 | Zustand |
| 프로젝트 관리 | GitHub Issues + Projects |

---

## 🏆 차별성 / 특징

- **"일정 + 이슈 + 흐름 설계"까지 가능한 유저 경험 중심 툴**  
- 실제 협업 시 겪은 문제(갈등, 흐름 붕괴 등)를 해결하기 위한 실전 기반 아이디어  
- 단순 구현이 아닌 **사용자 관점의 시각화 + 시스템 설계 능력** 강조  
- 자소서에서 *“단순히 열심히 하는 개발자”*가 아닌,  
  *“흐름을 설계하고 개선하는 개발자”*로 어필 가능

---

## 🧪 예상 MVP 범위 (1차 목표)

- 로그인 없이 사용할 수 있는 캘린더 + 이슈 보드 (LocalStorage or Mock DB 기반)  
- 이슈 생성 → 캘린더 반영 → 상태 변경까지 가능한 구조 완성  
- 1개의 프로젝트 기준으로 제한

---

## ✅ 일정 계획 (총 4주 예상)

| 주차 | 목표 |
|------|------|
| 1주차 | 기획 정리, 컴포넌트 설계, 캘린더 레이아웃 구현 |
| 2주차 | 이슈 보드 구현, 이슈 생성/수정/이동 기능 완성 |
| 3주차 | 캘린더 ↔ 이슈 연동 구현, 상태 관리 정리 |
| 4주차 | 테스트, UI 개선, 배포, README 작성 |

---

